{"version":3,"sources":["RecipeCreate.js","RecipeList.js","RecipeData.js","App.js","index.js"],"names":["RecipeCreate","recipes","setRecipes","initialform","name","cuisine","photo","ingredients","preparation","useState","formData","setFormData","handleChange","target","value","onSubmit","event","preventDefault","id","type","onChange","required","placeholder","className","RecipeList","arr","recipe","map","index","key","src","onClick","splice","handleRemove","RecipeData","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAmGeA,MAjGf,YAAgD,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WACzBC,EAAc,CAClBC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,YAAa,GACbC,YAAa,IAGf,EAAgCC,mBAASN,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACMC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBF,EAAY,2BACPD,GADM,kBAERG,EAAOT,KAAOS,EAAOC,UAY1B,OACE,0BAAMV,KAAK,SAASW,SAVD,SAACC,GACpBA,EAAMC,iBACNf,EAAW,GAAD,mBAAKD,GAAL,CAAcS,KACxBC,EAAYR,KAQV,+BACE,+BACE,4BACE,4BACE,2BACEe,GAAG,OACHd,KAAK,OACLe,KAAK,OACLC,SAAUR,EACVS,UAAU,EACVC,YAAY,OACZR,MAAOJ,EAASN,QAGpB,4BACE,2BACEc,GAAG,UACHd,KAAK,UACLe,KAAK,OACLC,SAAUR,EACVS,UAAU,EACVC,YAAY,UACZR,MAAOJ,EAASL,WAGpB,4BACE,2BACEa,GAAG,QACHd,KAAK,QACLe,KAAK,MACLE,UAAU,EACVD,SAAUR,EACVU,YAAY,QACZR,MAAOJ,EAASJ,SAGpB,4BACE,8BACEY,GAAG,cACHd,KAAK,cACLe,KAAK,OACLE,UAAU,EACVD,SAAUR,EACVU,YAAY,cACZR,MAAOJ,EAASH,eAGpB,4BACE,8BACEW,GAAG,cACHd,KAAK,cACLe,KAAK,OACLE,UAAU,EACVD,SAAUR,EACVU,YAAY,cACZR,MAAOJ,EAASF,eAGpB,wBAAIe,UAAU,QACZ,4BACE,4BAAQJ,KAAK,UAAb,iBCvCDK,MAhDf,YAA4C,IAAvBvB,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,WAKxBuB,EAAG,YAAOxB,GASRyB,EACJzB,EAAQ0B,KAAI,SAACD,EAAQE,GACnB,OACI,wBAAIC,IAAKD,GACT,4BAAMF,EAAOtB,MACb,4BAAMsB,EAAOrB,SACb,4BAAK,yBAAKyB,IAAKJ,EAAOpB,SACtB,wBAAIiB,UAAU,cAAa,2BAAIG,EAAOnB,cACtC,wBAAIgB,UAAU,cAAa,2BAAIG,EAAOlB,cACtC,4BAAI,4BAAQJ,KAAK,SAAS2B,QAAS,kBAjB3C,SAAsBH,IAEN,IAAXA,IACDH,EAAIO,OAAOJ,EAAO,GAClB1B,EAAWuB,IAaiCQ,CAAaL,KAAjD,eAMZ,OACE,yBAAKL,UAAU,eACb,+BACE,+BACE,4BACE,oCACA,uCACA,qCACA,2CACA,2CACA,yCAGJ,+BAAQG,MCtBDQ,EAjBI,CACjB,CACE9B,KAAM,uBACNC,QAAS,WACTC,MAAO,gGACPC,YAAa,sJACbC,YAAa,4RAEf,CACEJ,KAAM,YACNC,QAAS,UACTC,MAAO,4EACPC,YAAa,mNACbC,YAAa,kKCIF2B,MAhBf,WACE,MAA8B1B,mBAASyB,GAAvC,mBAAOjC,EAAP,KAAgBC,EAAhB,KAMA,OACE,yBAAKqB,UAAU,OACb,gCAAQ,uDACR,kBAAC,EAAD,CAAYtB,QAASA,EAASC,WAAYA,IAC1C,kBAAC,EAAD,CAAcD,QAASA,EAASC,WAAYA,MCblDkC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.70d82372.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction RecipeCreate({ recipes, setRecipes }) {\n  const initialform = {\n    name: \"\",\n    cuisine: \"\",\n    photo: \"\",\n    ingredients: \"\",\n    preparation: \"\",\n  };\n\n  const [formData, setFormData] = useState(initialform);\n  const handleChange = ({ target }) => {\n    setFormData({\n      ...formData,\n      [target.name]: target.value,\n    });\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setRecipes([...recipes, formData]);\n    setFormData(initialform);\n  };\n  // TODO: When the form is submitted, a new recipe should be created, and the form contents cleared.\n  // TODO: Add the required input and textarea form elements.\n  // TODO: Add the required submit and change handlers\n\n  return (\n    <form name=\"create\" onSubmit={handleSubmit}>\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <input\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                onChange={handleChange}\n                required={true}\n                placeholder=\"Name\"\n                value={formData.name}\n              ></input>\n            </td>\n            <td>\n              <input\n                id=\"cuisine\"\n                name=\"cuisine\"\n                type=\"text\"\n                onChange={handleChange}\n                required={true}\n                placeholder=\"Cuisine\"\n                value={formData.cuisine}\n              ></input>\n            </td>\n            <td>\n              <input\n                id=\"photo\"\n                name=\"photo\"\n                type=\"url\"\n                required={true}\n                onChange={handleChange}\n                placeholder=\"photo\"\n                value={formData.photo}\n              ></input>\n            </td>\n            <td>\n              <textarea\n                id=\"ingredients\"\n                name=\"ingredients\"\n                type=\"text\"\n                required={true}\n                onChange={handleChange}\n                placeholder=\"Ingredients\"\n                value={formData.ingredients}\n              ></textarea>\n            </td>\n            <td>\n              <textarea\n                id=\"preparation\"\n                name=\"preparation\"\n                type=\"text\"\n                required={true}\n                onChange={handleChange}\n                placeholder=\"Preparation\"\n                value={formData.preparation}\n              ></textarea>\n            </td>\n            <td className=\"smTr\">\n              <td>\n                <button type=\"submit\">Create</button>\n              </td>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nexport default RecipeCreate;\n","import React from \"react\";\n\nfunction RecipeList({recipes, setRecipes}) {\n  \n  // TODO: Display the list of recipes using the structure of table that is provided.\n  // TODO: Create at least one additional component that is used by this component.\n  // TODO: Each recipe row must have a delete button - <button name=\"delete\">Delete</button> - that deletes the post when clicked\n  let arr = [...recipes];\n  function handleRemove(index){\n    //console.log(index);\n    if(index !== -1){\n      arr.splice(index, 1);\n      setRecipes(arr);\n    }\n  }\n  \n  const recipe = (\n    recipes.map((recipe, index)=>{\n      return (\n          <tr key={index}>\n          <td >{recipe.name}</td>\n          <td >{recipe.cuisine}</td>\n          <td ><img src={recipe.photo}/></td>\n          <td className=\"content_td\"><p>{recipe.ingredients}</p></td>\n          <td className=\"content_td\"><p>{recipe.preparation}</p></td>\n          <td><button name=\"delete\" onClick={()=> handleRemove(index)}>Delete</button></td>\n          </tr>\n      );\n    })\n  )\n\n  return (\n    <div className=\"recipe-list\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Cuisine</th>\n            <th>Photo</th>\n            <th>Ingredients</th>\n            <th>Preparation</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>{recipe}</tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default RecipeList;\n","/**\n* This is the data that is initially loaded.\n* Please do not modify this file.\n*/\n\nconst RecipeData = [\n  {\n    name: \"Tuna Poke with Mango\",\n    cuisine: \"Hawaiian\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/tunapokebowlwithmango22.jpg\",\n    ingredients: \"1 package of sushi grade tuna. 1 cup cooked quinoa ½ avocado, sliced. ½ mango, cubed. 1 shredded carrot. 1 small sliced cucumber. poke sauce.\",\n    preparation: \"1. Chop tuna into cubes. 2. Toss with 1 tbsp sesame oil and 1 tbsp tamari. Set aside. 3. Layer your poke bowl starting with quinoa. 4. Whisk all poke sauce ingredients in a bowl and pour over the poke bowl. 5. Garnish with sesame seeds and furikake. 6. Top with chopped scallions.\"\n  },\n  {\n    name: \"Guacamole\",\n    cuisine: \"Mexican\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/017.jpg\",\n    ingredients: \"3 ripe avocados. ¾ cup finely chopped Roma tomato. 2 serrano chiles very finely chopped (seeded and deveined). 3 heaping tablespoons of finely chopped onion. 3 tablespoons of minced cilantro. Salt to taste\",\n    preparation: \"1. Remove the flesh of the avocados. 2. Mash the avocados with the back of a fork. 3. Add the other ingredients and incorporate evenly. 4. Add salt to taste.\"\n  },\n];\n\nexport default RecipeData;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeCreate from \"./RecipeCreate\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeData from \"./RecipeData\"\n\nfunction App() {\n  const [recipes, setRecipes] = useState(RecipeData);\n\n  // TODO: Add the ability for the <RecipeList /> component to list, edit and delete an existing recipe.\n  // TODO: Add the ability for the <RecipeCreate /> component to create new recipes.\n\n  \n  return (\n    <div className=\"App\">\n      <header><h1>Delicious Food Recipes</h1></header>   \n      <RecipeList recipes={recipes} setRecipes={setRecipes}/>\n      <RecipeCreate recipes={recipes} setRecipes={setRecipes}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}